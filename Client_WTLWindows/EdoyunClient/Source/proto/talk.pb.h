// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: talk.proto

#ifndef PROTOBUF_talk_2eproto__INCLUDED
#define PROTOBUF_talk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)

namespace tms {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_talk_2eproto();
void protobuf_AssignDesc_talk_2eproto();
void protobuf_ShutdownFile_talk_2eproto();

class TalkMsg;
class TalkMsgAns;
class PullTalkMsgReq;
class MsgInfoNotify;
class MsgInfoNotify_MsgInfo;
class TalkMsgBaseList;
class TalkMsgBaseList_TalkMsgBase;
class ChatMsgBaseList;
class ChatMsgBaseList_ChatMsgBase;
class UserMsgIDList;
class UserMsgIDList_UserMsgID;

// ===================================================================

class TalkMsg : public ::google::protobuf::Message {
 public:
  TalkMsg();
  virtual ~TalkMsg();

  TalkMsg(const TalkMsg& from);

  inline TalkMsg& operator=(const TalkMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalkMsg& default_instance();

  void Swap(TalkMsg* other);

  // implements Message ----------------------------------------------

  TalkMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalkMsg& from);
  void MergeFrom(const TalkMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uSendID = 1 [default = 0];
  inline bool has_usendid() const;
  inline void clear_usendid();
  static const int kUSendIDFieldNumber = 1;
  inline ::google::protobuf::uint32 usendid() const;
  inline void set_usendid(::google::protobuf::uint32 value);

  // required uint32 uTargetID = 2 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 2;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // optional uint32 uMsgID = 3 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 3;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // required string msg = 4;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 4;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:tms.TalkMsg)
 private:
  inline void set_has_usendid();
  inline void clear_has_usendid();
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 usendid_;
  ::google::protobuf::uint32 utargetid_;
  ::std::string* msg_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static TalkMsg* default_instance_;
};
// -------------------------------------------------------------------

class TalkMsgAns : public ::google::protobuf::Message {
 public:
  TalkMsgAns();
  virtual ~TalkMsgAns();

  TalkMsgAns(const TalkMsgAns& from);

  inline TalkMsgAns& operator=(const TalkMsgAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalkMsgAns& default_instance();

  void Swap(TalkMsgAns* other);

  // implements Message ----------------------------------------------

  TalkMsgAns* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalkMsgAns& from);
  void MergeFrom(const TalkMsgAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uError = 1 [default = 0];
  inline bool has_uerror() const;
  inline void clear_uerror();
  static const int kUErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 uerror() const;
  inline void set_uerror(::google::protobuf::uint32 value);

  // required uint32 uTargetID = 2 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 2;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // required uint32 uMsgID = 3 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 3;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.TalkMsgAns)
 private:
  inline void set_has_uerror();
  inline void clear_has_uerror();
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uerror_;
  ::google::protobuf::uint32 utargetid_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static TalkMsgAns* default_instance_;
};
// -------------------------------------------------------------------

class PullTalkMsgReq : public ::google::protobuf::Message {
 public:
  PullTalkMsgReq();
  virtual ~PullTalkMsgReq();

  PullTalkMsgReq(const PullTalkMsgReq& from);

  inline PullTalkMsgReq& operator=(const PullTalkMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PullTalkMsgReq& default_instance();

  void Swap(PullTalkMsgReq* other);

  // implements Message ----------------------------------------------

  PullTalkMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PullTalkMsgReq& from);
  void MergeFrom(const PullTalkMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uTargetID = 1 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // required uint32 uMsgID = 2 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.PullTalkMsgReq)
 private:
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 utargetid_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static PullTalkMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgInfoNotify_MsgInfo : public ::google::protobuf::Message {
 public:
  MsgInfoNotify_MsgInfo();
  virtual ~MsgInfoNotify_MsgInfo();

  MsgInfoNotify_MsgInfo(const MsgInfoNotify_MsgInfo& from);

  inline MsgInfoNotify_MsgInfo& operator=(const MsgInfoNotify_MsgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInfoNotify_MsgInfo& default_instance();

  void Swap(MsgInfoNotify_MsgInfo* other);

  // implements Message ----------------------------------------------

  MsgInfoNotify_MsgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgInfoNotify_MsgInfo& from);
  void MergeFrom(const MsgInfoNotify_MsgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uTargetID = 1 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // required uint32 uMsgID = 2 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.MsgInfoNotify.MsgInfo)
 private:
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 utargetid_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static MsgInfoNotify_MsgInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgInfoNotify : public ::google::protobuf::Message {
 public:
  MsgInfoNotify();
  virtual ~MsgInfoNotify();

  MsgInfoNotify(const MsgInfoNotify& from);

  inline MsgInfoNotify& operator=(const MsgInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInfoNotify& default_instance();

  void Swap(MsgInfoNotify* other);

  // implements Message ----------------------------------------------

  MsgInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgInfoNotify& from);
  void MergeFrom(const MsgInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgInfoNotify_MsgInfo MsgInfo;

  // accessors -------------------------------------------------------

  // repeated .tms.MsgInfoNotify.MsgInfo MsgInfos = 1;
  inline int msginfos_size() const;
  inline void clear_msginfos();
  static const int kMsgInfosFieldNumber = 1;
  inline const ::tms::MsgInfoNotify_MsgInfo& msginfos(int index) const;
  inline ::tms::MsgInfoNotify_MsgInfo* mutable_msginfos(int index);
  inline ::tms::MsgInfoNotify_MsgInfo* add_msginfos();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::MsgInfoNotify_MsgInfo >&
      msginfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::MsgInfoNotify_MsgInfo >*
      mutable_msginfos();

  // @@protoc_insertion_point(class_scope:tms.MsgInfoNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::MsgInfoNotify_MsgInfo > msginfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static MsgInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class TalkMsgBaseList_TalkMsgBase : public ::google::protobuf::Message {
 public:
  TalkMsgBaseList_TalkMsgBase();
  virtual ~TalkMsgBaseList_TalkMsgBase();

  TalkMsgBaseList_TalkMsgBase(const TalkMsgBaseList_TalkMsgBase& from);

  inline TalkMsgBaseList_TalkMsgBase& operator=(const TalkMsgBaseList_TalkMsgBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalkMsgBaseList_TalkMsgBase& default_instance();

  void Swap(TalkMsgBaseList_TalkMsgBase* other);

  // implements Message ----------------------------------------------

  TalkMsgBaseList_TalkMsgBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalkMsgBaseList_TalkMsgBase& from);
  void MergeFrom(const TalkMsgBaseList_TalkMsgBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uTalkID = 1 [default = 0];
  inline bool has_utalkid() const;
  inline void clear_utalkid();
  static const int kUTalkIDFieldNumber = 1;
  inline ::google::protobuf::uint64 utalkid() const;
  inline void set_utalkid(::google::protobuf::uint64 value);

  // required uint32 uMsgID = 2 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.TalkMsgBaseList.TalkMsgBase)
 private:
  inline void set_has_utalkid();
  inline void clear_has_utalkid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 utalkid_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static TalkMsgBaseList_TalkMsgBase* default_instance_;
};
// -------------------------------------------------------------------

class TalkMsgBaseList : public ::google::protobuf::Message {
 public:
  TalkMsgBaseList();
  virtual ~TalkMsgBaseList();

  TalkMsgBaseList(const TalkMsgBaseList& from);

  inline TalkMsgBaseList& operator=(const TalkMsgBaseList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalkMsgBaseList& default_instance();

  void Swap(TalkMsgBaseList* other);

  // implements Message ----------------------------------------------

  TalkMsgBaseList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalkMsgBaseList& from);
  void MergeFrom(const TalkMsgBaseList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TalkMsgBaseList_TalkMsgBase TalkMsgBase;

  // accessors -------------------------------------------------------

  // repeated .tms.TalkMsgBaseList.TalkMsgBase TalkMsgBases = 1;
  inline int talkmsgbases_size() const;
  inline void clear_talkmsgbases();
  static const int kTalkMsgBasesFieldNumber = 1;
  inline const ::tms::TalkMsgBaseList_TalkMsgBase& talkmsgbases(int index) const;
  inline ::tms::TalkMsgBaseList_TalkMsgBase* mutable_talkmsgbases(int index);
  inline ::tms::TalkMsgBaseList_TalkMsgBase* add_talkmsgbases();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::TalkMsgBaseList_TalkMsgBase >&
      talkmsgbases() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::TalkMsgBaseList_TalkMsgBase >*
      mutable_talkmsgbases();

  // @@protoc_insertion_point(class_scope:tms.TalkMsgBaseList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::TalkMsgBaseList_TalkMsgBase > talkmsgbases_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static TalkMsgBaseList* default_instance_;
};
// -------------------------------------------------------------------

class ChatMsgBaseList_ChatMsgBase : public ::google::protobuf::Message {
 public:
  ChatMsgBaseList_ChatMsgBase();
  virtual ~ChatMsgBaseList_ChatMsgBase();

  ChatMsgBaseList_ChatMsgBase(const ChatMsgBaseList_ChatMsgBase& from);

  inline ChatMsgBaseList_ChatMsgBase& operator=(const ChatMsgBaseList_ChatMsgBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMsgBaseList_ChatMsgBase& default_instance();

  void Swap(ChatMsgBaseList_ChatMsgBase* other);

  // implements Message ----------------------------------------------

  ChatMsgBaseList_ChatMsgBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatMsgBaseList_ChatMsgBase& from);
  void MergeFrom(const ChatMsgBaseList_ChatMsgBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uChatID = 1 [default = 0];
  inline bool has_uchatid() const;
  inline void clear_uchatid();
  static const int kUChatIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uchatid() const;
  inline void set_uchatid(::google::protobuf::uint32 value);

  // required uint32 uMsgID = 2 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.ChatMsgBaseList.ChatMsgBase)
 private:
  inline void set_has_uchatid();
  inline void clear_has_uchatid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uchatid_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static ChatMsgBaseList_ChatMsgBase* default_instance_;
};
// -------------------------------------------------------------------

class ChatMsgBaseList : public ::google::protobuf::Message {
 public:
  ChatMsgBaseList();
  virtual ~ChatMsgBaseList();

  ChatMsgBaseList(const ChatMsgBaseList& from);

  inline ChatMsgBaseList& operator=(const ChatMsgBaseList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMsgBaseList& default_instance();

  void Swap(ChatMsgBaseList* other);

  // implements Message ----------------------------------------------

  ChatMsgBaseList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatMsgBaseList& from);
  void MergeFrom(const ChatMsgBaseList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ChatMsgBaseList_ChatMsgBase ChatMsgBase;

  // accessors -------------------------------------------------------

  // repeated .tms.ChatMsgBaseList.ChatMsgBase ChatMsgBases = 1;
  inline int chatmsgbases_size() const;
  inline void clear_chatmsgbases();
  static const int kChatMsgBasesFieldNumber = 1;
  inline const ::tms::ChatMsgBaseList_ChatMsgBase& chatmsgbases(int index) const;
  inline ::tms::ChatMsgBaseList_ChatMsgBase* mutable_chatmsgbases(int index);
  inline ::tms::ChatMsgBaseList_ChatMsgBase* add_chatmsgbases();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::ChatMsgBaseList_ChatMsgBase >&
      chatmsgbases() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::ChatMsgBaseList_ChatMsgBase >*
      mutable_chatmsgbases();

  // @@protoc_insertion_point(class_scope:tms.ChatMsgBaseList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::ChatMsgBaseList_ChatMsgBase > chatmsgbases_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static ChatMsgBaseList* default_instance_;
};
// -------------------------------------------------------------------

class UserMsgIDList_UserMsgID : public ::google::protobuf::Message {
 public:
  UserMsgIDList_UserMsgID();
  virtual ~UserMsgIDList_UserMsgID();

  UserMsgIDList_UserMsgID(const UserMsgIDList_UserMsgID& from);

  inline UserMsgIDList_UserMsgID& operator=(const UserMsgIDList_UserMsgID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMsgIDList_UserMsgID& default_instance();

  void Swap(UserMsgIDList_UserMsgID* other);

  // implements Message ----------------------------------------------

  UserMsgIDList_UserMsgID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMsgIDList_UserMsgID& from);
  void MergeFrom(const UserMsgIDList_UserMsgID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uSendID = 1 [default = 0];
  inline bool has_usendid() const;
  inline void clear_usendid();
  static const int kUSendIDFieldNumber = 1;
  inline ::google::protobuf::uint32 usendid() const;
  inline void set_usendid(::google::protobuf::uint32 value);

  // required uint32 uTargetID = 2 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 2;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // required uint32 uMsgID = 3 [default = 0];
  inline bool has_umsgid() const;
  inline void clear_umsgid();
  static const int kUMsgIDFieldNumber = 3;
  inline ::google::protobuf::uint32 umsgid() const;
  inline void set_umsgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.UserMsgIDList.UserMsgID)
 private:
  inline void set_has_usendid();
  inline void clear_has_usendid();
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_umsgid();
  inline void clear_has_umsgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 usendid_;
  ::google::protobuf::uint32 utargetid_;
  ::google::protobuf::uint32 umsgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static UserMsgIDList_UserMsgID* default_instance_;
};
// -------------------------------------------------------------------

class UserMsgIDList : public ::google::protobuf::Message {
 public:
  UserMsgIDList();
  virtual ~UserMsgIDList();

  UserMsgIDList(const UserMsgIDList& from);

  inline UserMsgIDList& operator=(const UserMsgIDList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMsgIDList& default_instance();

  void Swap(UserMsgIDList* other);

  // implements Message ----------------------------------------------

  UserMsgIDList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMsgIDList& from);
  void MergeFrom(const UserMsgIDList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserMsgIDList_UserMsgID UserMsgID;

  // accessors -------------------------------------------------------

  // repeated .tms.UserMsgIDList.UserMsgID UserMsgIDs = 1;
  inline int usermsgids_size() const;
  inline void clear_usermsgids();
  static const int kUserMsgIDsFieldNumber = 1;
  inline const ::tms::UserMsgIDList_UserMsgID& usermsgids(int index) const;
  inline ::tms::UserMsgIDList_UserMsgID* mutable_usermsgids(int index);
  inline ::tms::UserMsgIDList_UserMsgID* add_usermsgids();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::UserMsgIDList_UserMsgID >&
      usermsgids() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::UserMsgIDList_UserMsgID >*
      mutable_usermsgids();

  // @@protoc_insertion_point(class_scope:tms.UserMsgIDList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::UserMsgIDList_UserMsgID > usermsgids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_talk_2eproto();
  friend void protobuf_AssignDesc_talk_2eproto();
  friend void protobuf_ShutdownFile_talk_2eproto();

  void InitAsDefaultInstance();
  static UserMsgIDList* default_instance_;
};
// ===================================================================


// ===================================================================

// TalkMsg

// required uint32 uSendID = 1 [default = 0];
inline bool TalkMsg::has_usendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalkMsg::set_has_usendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalkMsg::clear_has_usendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalkMsg::clear_usendid() {
  usendid_ = 0u;
  clear_has_usendid();
}
inline ::google::protobuf::uint32 TalkMsg::usendid() const {
  return usendid_;
}
inline void TalkMsg::set_usendid(::google::protobuf::uint32 value) {
  set_has_usendid();
  usendid_ = value;
}

// required uint32 uTargetID = 2 [default = 0];
inline bool TalkMsg::has_utargetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalkMsg::set_has_utargetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalkMsg::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalkMsg::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 TalkMsg::utargetid() const {
  return utargetid_;
}
inline void TalkMsg::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// optional uint32 uMsgID = 3 [default = 0];
inline bool TalkMsg::has_umsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalkMsg::set_has_umsgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalkMsg::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalkMsg::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 TalkMsg::umsgid() const {
  return umsgid_;
}
inline void TalkMsg::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// required string msg = 4;
inline bool TalkMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TalkMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TalkMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TalkMsg::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& TalkMsg::msg() const {
  return *msg_;
}
inline void TalkMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void TalkMsg::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void TalkMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TalkMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* TalkMsg::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TalkMsg::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TalkMsgAns

// required uint32 uError = 1 [default = 0];
inline bool TalkMsgAns::has_uerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalkMsgAns::set_has_uerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalkMsgAns::clear_has_uerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalkMsgAns::clear_uerror() {
  uerror_ = 0u;
  clear_has_uerror();
}
inline ::google::protobuf::uint32 TalkMsgAns::uerror() const {
  return uerror_;
}
inline void TalkMsgAns::set_uerror(::google::protobuf::uint32 value) {
  set_has_uerror();
  uerror_ = value;
}

// required uint32 uTargetID = 2 [default = 0];
inline bool TalkMsgAns::has_utargetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalkMsgAns::set_has_utargetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalkMsgAns::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalkMsgAns::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 TalkMsgAns::utargetid() const {
  return utargetid_;
}
inline void TalkMsgAns::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// required uint32 uMsgID = 3 [default = 0];
inline bool TalkMsgAns::has_umsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalkMsgAns::set_has_umsgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalkMsgAns::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalkMsgAns::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 TalkMsgAns::umsgid() const {
  return umsgid_;
}
inline void TalkMsgAns::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// -------------------------------------------------------------------

// PullTalkMsgReq

// required uint32 uTargetID = 1 [default = 0];
inline bool PullTalkMsgReq::has_utargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PullTalkMsgReq::set_has_utargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PullTalkMsgReq::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PullTalkMsgReq::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 PullTalkMsgReq::utargetid() const {
  return utargetid_;
}
inline void PullTalkMsgReq::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// required uint32 uMsgID = 2 [default = 0];
inline bool PullTalkMsgReq::has_umsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PullTalkMsgReq::set_has_umsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PullTalkMsgReq::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PullTalkMsgReq::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 PullTalkMsgReq::umsgid() const {
  return umsgid_;
}
inline void PullTalkMsgReq::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// -------------------------------------------------------------------

// MsgInfoNotify_MsgInfo

// required uint32 uTargetID = 1 [default = 0];
inline bool MsgInfoNotify_MsgInfo::has_utargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgInfoNotify_MsgInfo::set_has_utargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgInfoNotify_MsgInfo::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgInfoNotify_MsgInfo::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 MsgInfoNotify_MsgInfo::utargetid() const {
  return utargetid_;
}
inline void MsgInfoNotify_MsgInfo::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// required uint32 uMsgID = 2 [default = 0];
inline bool MsgInfoNotify_MsgInfo::has_umsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgInfoNotify_MsgInfo::set_has_umsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgInfoNotify_MsgInfo::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgInfoNotify_MsgInfo::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 MsgInfoNotify_MsgInfo::umsgid() const {
  return umsgid_;
}
inline void MsgInfoNotify_MsgInfo::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// -------------------------------------------------------------------

// MsgInfoNotify

// repeated .tms.MsgInfoNotify.MsgInfo MsgInfos = 1;
inline int MsgInfoNotify::msginfos_size() const {
  return msginfos_.size();
}
inline void MsgInfoNotify::clear_msginfos() {
  msginfos_.Clear();
}
inline const ::tms::MsgInfoNotify_MsgInfo& MsgInfoNotify::msginfos(int index) const {
  return msginfos_.Get(index);
}
inline ::tms::MsgInfoNotify_MsgInfo* MsgInfoNotify::mutable_msginfos(int index) {
  return msginfos_.Mutable(index);
}
inline ::tms::MsgInfoNotify_MsgInfo* MsgInfoNotify::add_msginfos() {
  return msginfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::MsgInfoNotify_MsgInfo >&
MsgInfoNotify::msginfos() const {
  return msginfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::MsgInfoNotify_MsgInfo >*
MsgInfoNotify::mutable_msginfos() {
  return &msginfos_;
}

// -------------------------------------------------------------------

// TalkMsgBaseList_TalkMsgBase

// required uint64 uTalkID = 1 [default = 0];
inline bool TalkMsgBaseList_TalkMsgBase::has_utalkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalkMsgBaseList_TalkMsgBase::set_has_utalkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalkMsgBaseList_TalkMsgBase::clear_has_utalkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalkMsgBaseList_TalkMsgBase::clear_utalkid() {
  utalkid_ = GOOGLE_ULONGLONG(0);
  clear_has_utalkid();
}
inline ::google::protobuf::uint64 TalkMsgBaseList_TalkMsgBase::utalkid() const {
  return utalkid_;
}
inline void TalkMsgBaseList_TalkMsgBase::set_utalkid(::google::protobuf::uint64 value) {
  set_has_utalkid();
  utalkid_ = value;
}

// required uint32 uMsgID = 2 [default = 0];
inline bool TalkMsgBaseList_TalkMsgBase::has_umsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalkMsgBaseList_TalkMsgBase::set_has_umsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalkMsgBaseList_TalkMsgBase::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalkMsgBaseList_TalkMsgBase::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 TalkMsgBaseList_TalkMsgBase::umsgid() const {
  return umsgid_;
}
inline void TalkMsgBaseList_TalkMsgBase::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// -------------------------------------------------------------------

// TalkMsgBaseList

// repeated .tms.TalkMsgBaseList.TalkMsgBase TalkMsgBases = 1;
inline int TalkMsgBaseList::talkmsgbases_size() const {
  return talkmsgbases_.size();
}
inline void TalkMsgBaseList::clear_talkmsgbases() {
  talkmsgbases_.Clear();
}
inline const ::tms::TalkMsgBaseList_TalkMsgBase& TalkMsgBaseList::talkmsgbases(int index) const {
  return talkmsgbases_.Get(index);
}
inline ::tms::TalkMsgBaseList_TalkMsgBase* TalkMsgBaseList::mutable_talkmsgbases(int index) {
  return talkmsgbases_.Mutable(index);
}
inline ::tms::TalkMsgBaseList_TalkMsgBase* TalkMsgBaseList::add_talkmsgbases() {
  return talkmsgbases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::TalkMsgBaseList_TalkMsgBase >&
TalkMsgBaseList::talkmsgbases() const {
  return talkmsgbases_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::TalkMsgBaseList_TalkMsgBase >*
TalkMsgBaseList::mutable_talkmsgbases() {
  return &talkmsgbases_;
}

// -------------------------------------------------------------------

// ChatMsgBaseList_ChatMsgBase

// required uint32 uChatID = 1 [default = 0];
inline bool ChatMsgBaseList_ChatMsgBase::has_uchatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMsgBaseList_ChatMsgBase::set_has_uchatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMsgBaseList_ChatMsgBase::clear_has_uchatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMsgBaseList_ChatMsgBase::clear_uchatid() {
  uchatid_ = 0u;
  clear_has_uchatid();
}
inline ::google::protobuf::uint32 ChatMsgBaseList_ChatMsgBase::uchatid() const {
  return uchatid_;
}
inline void ChatMsgBaseList_ChatMsgBase::set_uchatid(::google::protobuf::uint32 value) {
  set_has_uchatid();
  uchatid_ = value;
}

// required uint32 uMsgID = 2 [default = 0];
inline bool ChatMsgBaseList_ChatMsgBase::has_umsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMsgBaseList_ChatMsgBase::set_has_umsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMsgBaseList_ChatMsgBase::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMsgBaseList_ChatMsgBase::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 ChatMsgBaseList_ChatMsgBase::umsgid() const {
  return umsgid_;
}
inline void ChatMsgBaseList_ChatMsgBase::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// -------------------------------------------------------------------

// ChatMsgBaseList

// repeated .tms.ChatMsgBaseList.ChatMsgBase ChatMsgBases = 1;
inline int ChatMsgBaseList::chatmsgbases_size() const {
  return chatmsgbases_.size();
}
inline void ChatMsgBaseList::clear_chatmsgbases() {
  chatmsgbases_.Clear();
}
inline const ::tms::ChatMsgBaseList_ChatMsgBase& ChatMsgBaseList::chatmsgbases(int index) const {
  return chatmsgbases_.Get(index);
}
inline ::tms::ChatMsgBaseList_ChatMsgBase* ChatMsgBaseList::mutable_chatmsgbases(int index) {
  return chatmsgbases_.Mutable(index);
}
inline ::tms::ChatMsgBaseList_ChatMsgBase* ChatMsgBaseList::add_chatmsgbases() {
  return chatmsgbases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::ChatMsgBaseList_ChatMsgBase >&
ChatMsgBaseList::chatmsgbases() const {
  return chatmsgbases_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::ChatMsgBaseList_ChatMsgBase >*
ChatMsgBaseList::mutable_chatmsgbases() {
  return &chatmsgbases_;
}

// -------------------------------------------------------------------

// UserMsgIDList_UserMsgID

// required uint32 uSendID = 1 [default = 0];
inline bool UserMsgIDList_UserMsgID::has_usendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMsgIDList_UserMsgID::set_has_usendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMsgIDList_UserMsgID::clear_has_usendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMsgIDList_UserMsgID::clear_usendid() {
  usendid_ = 0u;
  clear_has_usendid();
}
inline ::google::protobuf::uint32 UserMsgIDList_UserMsgID::usendid() const {
  return usendid_;
}
inline void UserMsgIDList_UserMsgID::set_usendid(::google::protobuf::uint32 value) {
  set_has_usendid();
  usendid_ = value;
}

// required uint32 uTargetID = 2 [default = 0];
inline bool UserMsgIDList_UserMsgID::has_utargetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMsgIDList_UserMsgID::set_has_utargetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMsgIDList_UserMsgID::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMsgIDList_UserMsgID::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 UserMsgIDList_UserMsgID::utargetid() const {
  return utargetid_;
}
inline void UserMsgIDList_UserMsgID::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// required uint32 uMsgID = 3 [default = 0];
inline bool UserMsgIDList_UserMsgID::has_umsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserMsgIDList_UserMsgID::set_has_umsgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserMsgIDList_UserMsgID::clear_has_umsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserMsgIDList_UserMsgID::clear_umsgid() {
  umsgid_ = 0u;
  clear_has_umsgid();
}
inline ::google::protobuf::uint32 UserMsgIDList_UserMsgID::umsgid() const {
  return umsgid_;
}
inline void UserMsgIDList_UserMsgID::set_umsgid(::google::protobuf::uint32 value) {
  set_has_umsgid();
  umsgid_ = value;
}

// -------------------------------------------------------------------

// UserMsgIDList

// repeated .tms.UserMsgIDList.UserMsgID UserMsgIDs = 1;
inline int UserMsgIDList::usermsgids_size() const {
  return usermsgids_.size();
}
inline void UserMsgIDList::clear_usermsgids() {
  usermsgids_.Clear();
}
inline const ::tms::UserMsgIDList_UserMsgID& UserMsgIDList::usermsgids(int index) const {
  return usermsgids_.Get(index);
}
inline ::tms::UserMsgIDList_UserMsgID* UserMsgIDList::mutable_usermsgids(int index) {
  return usermsgids_.Mutable(index);
}
inline ::tms::UserMsgIDList_UserMsgID* UserMsgIDList::add_usermsgids() {
  return usermsgids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::UserMsgIDList_UserMsgID >&
UserMsgIDList::usermsgids() const {
  return usermsgids_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::UserMsgIDList_UserMsgID >*
UserMsgIDList::mutable_usermsgids() {
  return &usermsgids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tms

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_talk_2eproto__INCLUDED
