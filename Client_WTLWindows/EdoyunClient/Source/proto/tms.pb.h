// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tms.proto

#ifndef PROTOBUF_tms_2eproto__INCLUDED
#define PROTOBUF_tms_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tms {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tms_2eproto();
void protobuf_AssignDesc_tms_2eproto();
void protobuf_ShutdownFile_tms_2eproto();

class AnsInfo;
class ServerTime;
class FileLoadInfo;
class FileLoadData;
class StateServerReq;
class ServerInfo;
class ServerOut;
class ServerInfoList;
class TargtServerID;
class TargtServerIDList;
class TargetOnlineInfo;

enum StateServerReq_cmd {
  StateServerReq_cmd_ChatMsgIDALL = 1,
  StateServerReq_cmd_TalkMsgIDALL = 2,
  StateServerReq_cmd_UserMsgIDALL = 3,
  StateServerReq_cmd_TargetInfoALL = 4,
  StateServerReq_cmd_TargtServerIDALL = 5,
  StateServerReq_cmd_UserLoginFlagALL = 6
};
bool StateServerReq_cmd_IsValid(int value);
const StateServerReq_cmd StateServerReq_cmd_cmd_MIN = StateServerReq_cmd_ChatMsgIDALL;
const StateServerReq_cmd StateServerReq_cmd_cmd_MAX = StateServerReq_cmd_UserLoginFlagALL;
const int StateServerReq_cmd_cmd_ARRAYSIZE = StateServerReq_cmd_cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* StateServerReq_cmd_descriptor();
inline const ::std::string& StateServerReq_cmd_Name(StateServerReq_cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    StateServerReq_cmd_descriptor(), value);
}
inline bool StateServerReq_cmd_Parse(
    const ::std::string& name, StateServerReq_cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateServerReq_cmd>(
    StateServerReq_cmd_descriptor(), name, value);
}
enum cmd {
  n_AnsInfo = 0,
  n_TalkMsg = 1,
  n_TalkMsgAns = 2,
  n_PullTalkMsgReq = 3,
  n_MsgInfoNotify = 11,
  n_TargetInfo = 34,
  n_FriendInfo = 35,
  n_UserTargets = 36,
  n_UserPrivateInfo = 37,
  n_UserInfo = 38,
  n_UserOnlineInfo = 39,
  n_LoginInfo = 40,
  n_RegisterInfo = 41,
  n_UserInfoReq = 42,
  n_TargetsQuery = 43,
  n_UpdateUserInfo = 44,
  n_TargetsAdd = 45,
  n_UpdateTargetInfo = 46,
  n_StateServerReq = 47,
  n_UserInfo_Old = 48,
  n_UserInfoNotify = 101,
  n_UserBaseInfoNotify = 102,
  n_TargetsAddNotify = 103,
  n_TargetsNotify = 104,
  n_UserOnlineNotify = 105,
  n_ReqHeartbeat = 1001,
  n_AnsHeartbeat = 1002,
  n_ServerTime = 1003,
  n_FileLoadData = 1007,
  n_FileLoadInfo = 1008,
  n_UserOnlineNotifyList = 1020,
  n_TalkMsgBaseList = 1021,
  n_ChatMsgBaseList = 1022,
  n_UserMsgIDList = 1023,
  n_ServerInfo = 1024,
  n_ServerInfoList = 1025,
  n_ServerOut = 1026,
  n_TargtServerIDList = 1027,
  n_UserLoginFlagList = 1028,
  n_TargetOnlineInfo = 1029,
  n_ChatUser = 1030
};
bool cmd_IsValid(int value);
const cmd cmd_MIN = n_AnsInfo;
const cmd cmd_MAX = n_ChatUser;
const int cmd_ARRAYSIZE = cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* cmd_descriptor();
inline const ::std::string& cmd_Name(cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    cmd_descriptor(), value);
}
inline bool cmd_Parse(
    const ::std::string& name, cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<cmd>(
    cmd_descriptor(), name, value);
}
// ===================================================================

class AnsInfo : public ::google::protobuf::Message {
 public:
  AnsInfo();
  virtual ~AnsInfo();

  AnsInfo(const AnsInfo& from);

  inline AnsInfo& operator=(const AnsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnsInfo& default_instance();

  void Swap(AnsInfo* other);

  // implements Message ----------------------------------------------

  AnsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnsInfo& from);
  void MergeFrom(const AnsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uError = 1;
  inline bool has_uerror() const;
  inline void clear_uerror();
  static const int kUErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 uerror() const;
  inline void set_uerror(::google::protobuf::uint32 value);

  // required .tms.cmd tCmd = 2;
  inline bool has_tcmd() const;
  inline void clear_tcmd();
  static const int kTCmdFieldNumber = 2;
  inline ::tms::cmd tcmd() const;
  inline void set_tcmd(::tms::cmd value);

  // optional string strAccountNo = 3;
  inline bool has_straccountno() const;
  inline void clear_straccountno();
  static const int kStrAccountNoFieldNumber = 3;
  inline const ::std::string& straccountno() const;
  inline void set_straccountno(const ::std::string& value);
  inline void set_straccountno(const char* value);
  inline void set_straccountno(const char* value, size_t size);
  inline ::std::string* mutable_straccountno();
  inline ::std::string* release_straccountno();
  inline void set_allocated_straccountno(::std::string* straccountno);

  // required uint32 uAccountID = 4;
  inline bool has_uaccountid() const;
  inline void clear_uaccountid();
  static const int kUAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 uaccountid() const;
  inline void set_uaccountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.AnsInfo)
 private:
  inline void set_has_uerror();
  inline void clear_has_uerror();
  inline void set_has_tcmd();
  inline void clear_has_tcmd();
  inline void set_has_straccountno();
  inline void clear_has_straccountno();
  inline void set_has_uaccountid();
  inline void clear_has_uaccountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uerror_;
  int tcmd_;
  ::std::string* straccountno_;
  ::google::protobuf::uint32 uaccountid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static AnsInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerTime : public ::google::protobuf::Message {
 public:
  ServerTime();
  virtual ~ServerTime();

  ServerTime(const ServerTime& from);

  inline ServerTime& operator=(const ServerTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTime& default_instance();

  void Swap(ServerTime* other);

  // implements Message ----------------------------------------------

  ServerTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTime& from);
  void MergeFrom(const ServerTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uServerTime = 1;
  inline bool has_uservertime() const;
  inline void clear_uservertime();
  static const int kUServerTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 uservertime() const;
  inline void set_uservertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tms.ServerTime)
 private:
  inline void set_has_uservertime();
  inline void clear_has_uservertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uservertime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static ServerTime* default_instance_;
};
// -------------------------------------------------------------------

class FileLoadInfo : public ::google::protobuf::Message {
 public:
  FileLoadInfo();
  virtual ~FileLoadInfo();

  FileLoadInfo(const FileLoadInfo& from);

  inline FileLoadInfo& operator=(const FileLoadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileLoadInfo& default_instance();

  void Swap(FileLoadInfo* other);

  // implements Message ----------------------------------------------

  FileLoadInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileLoadInfo& from);
  void MergeFrom(const FileLoadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required uint32 uOffset = 2;
  inline bool has_uoffset() const;
  inline void clear_uoffset();
  static const int kUOffsetFieldNumber = 2;
  inline ::google::protobuf::uint32 uoffset() const;
  inline void set_uoffset(::google::protobuf::uint32 value);

  // required uint32 uDownsize = 3;
  inline bool has_udownsize() const;
  inline void clear_udownsize();
  static const int kUDownsizeFieldNumber = 3;
  inline ::google::protobuf::uint32 udownsize() const;
  inline void set_udownsize(::google::protobuf::uint32 value);

  // required uint32 uLocalsize = 4;
  inline bool has_ulocalsize() const;
  inline void clear_ulocalsize();
  static const int kULocalsizeFieldNumber = 4;
  inline ::google::protobuf::uint32 ulocalsize() const;
  inline void set_ulocalsize(::google::protobuf::uint32 value);

  // required uint32 uLocaltime = 5;
  inline bool has_ulocaltime() const;
  inline void clear_ulocaltime();
  static const int kULocaltimeFieldNumber = 5;
  inline ::google::protobuf::uint32 ulocaltime() const;
  inline void set_ulocaltime(::google::protobuf::uint32 value);

  // required uint32 bVersion = 6;
  inline bool has_bversion() const;
  inline void clear_bversion();
  static const int kBVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 bversion() const;
  inline void set_bversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.FileLoadInfo)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_uoffset();
  inline void clear_has_uoffset();
  inline void set_has_udownsize();
  inline void clear_has_udownsize();
  inline void set_has_ulocalsize();
  inline void clear_has_ulocalsize();
  inline void set_has_ulocaltime();
  inline void clear_has_ulocaltime();
  inline void set_has_bversion();
  inline void clear_has_bversion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::uint32 uoffset_;
  ::google::protobuf::uint32 udownsize_;
  ::google::protobuf::uint32 ulocalsize_;
  ::google::protobuf::uint32 ulocaltime_;
  ::google::protobuf::uint32 bversion_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static FileLoadInfo* default_instance_;
};
// -------------------------------------------------------------------

class FileLoadData : public ::google::protobuf::Message {
 public:
  FileLoadData();
  virtual ~FileLoadData();

  FileLoadData(const FileLoadData& from);

  inline FileLoadData& operator=(const FileLoadData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileLoadData& default_instance();

  void Swap(FileLoadData* other);

  // implements Message ----------------------------------------------

  FileLoadData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileLoadData& from);
  void MergeFrom(const FileLoadData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uError = 1;
  inline bool has_uerror() const;
  inline void clear_uerror();
  static const int kUErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 uerror() const;
  inline void set_uerror(::google::protobuf::uint32 value);

  // required uint32 uFilesize = 2;
  inline bool has_ufilesize() const;
  inline void clear_ufilesize();
  static const int kUFilesizeFieldNumber = 2;
  inline ::google::protobuf::uint32 ufilesize() const;
  inline void set_ufilesize(::google::protobuf::uint32 value);

  // required uint32 uOffset = 3;
  inline bool has_uoffset() const;
  inline void clear_uoffset();
  static const int kUOffsetFieldNumber = 3;
  inline ::google::protobuf::uint32 uoffset() const;
  inline void set_uoffset(::google::protobuf::uint32 value);

  // required uint32 uDownsize = 4;
  inline bool has_udownsize() const;
  inline void clear_udownsize();
  static const int kUDownsizeFieldNumber = 4;
  inline ::google::protobuf::uint32 udownsize() const;
  inline void set_udownsize(::google::protobuf::uint32 value);

  // required uint32 uTmmodified = 5;
  inline bool has_utmmodified() const;
  inline void clear_utmmodified();
  static const int kUTmmodifiedFieldNumber = 5;
  inline ::google::protobuf::uint32 utmmodified() const;
  inline void set_utmmodified(::google::protobuf::uint32 value);

  // optional bytes szData = 6;
  inline bool has_szdata() const;
  inline void clear_szdata();
  static const int kSzDataFieldNumber = 6;
  inline const ::std::string& szdata() const;
  inline void set_szdata(const ::std::string& value);
  inline void set_szdata(const char* value);
  inline void set_szdata(const void* value, size_t size);
  inline ::std::string* mutable_szdata();
  inline ::std::string* release_szdata();
  inline void set_allocated_szdata(::std::string* szdata);

  // @@protoc_insertion_point(class_scope:tms.FileLoadData)
 private:
  inline void set_has_uerror();
  inline void clear_has_uerror();
  inline void set_has_ufilesize();
  inline void clear_has_ufilesize();
  inline void set_has_uoffset();
  inline void clear_has_uoffset();
  inline void set_has_udownsize();
  inline void clear_has_udownsize();
  inline void set_has_utmmodified();
  inline void clear_has_utmmodified();
  inline void set_has_szdata();
  inline void clear_has_szdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uerror_;
  ::google::protobuf::uint32 ufilesize_;
  ::google::protobuf::uint32 uoffset_;
  ::google::protobuf::uint32 udownsize_;
  ::std::string* szdata_;
  ::google::protobuf::uint32 utmmodified_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static FileLoadData* default_instance_;
};
// -------------------------------------------------------------------

class StateServerReq : public ::google::protobuf::Message {
 public:
  StateServerReq();
  virtual ~StateServerReq();

  StateServerReq(const StateServerReq& from);

  inline StateServerReq& operator=(const StateServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateServerReq& default_instance();

  void Swap(StateServerReq* other);

  // implements Message ----------------------------------------------

  StateServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateServerReq& from);
  void MergeFrom(const StateServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StateServerReq_cmd cmd;
  static const cmd ChatMsgIDALL = StateServerReq_cmd_ChatMsgIDALL;
  static const cmd TalkMsgIDALL = StateServerReq_cmd_TalkMsgIDALL;
  static const cmd UserMsgIDALL = StateServerReq_cmd_UserMsgIDALL;
  static const cmd TargetInfoALL = StateServerReq_cmd_TargetInfoALL;
  static const cmd TargtServerIDALL = StateServerReq_cmd_TargtServerIDALL;
  static const cmd UserLoginFlagALL = StateServerReq_cmd_UserLoginFlagALL;
  static inline bool cmd_IsValid(int value) {
    return StateServerReq_cmd_IsValid(value);
  }
  static const cmd cmd_MIN =
    StateServerReq_cmd_cmd_MIN;
  static const cmd cmd_MAX =
    StateServerReq_cmd_cmd_MAX;
  static const int cmd_ARRAYSIZE =
    StateServerReq_cmd_cmd_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  cmd_descriptor() {
    return StateServerReq_cmd_descriptor();
  }
  static inline const ::std::string& cmd_Name(cmd value) {
    return StateServerReq_cmd_Name(value);
  }
  static inline bool cmd_Parse(const ::std::string& name,
      cmd* value) {
    return StateServerReq_cmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .tms.StateServerReq.cmd ncmd = 1;
  inline bool has_ncmd() const;
  inline void clear_ncmd();
  static const int kNcmdFieldNumber = 1;
  inline ::tms::StateServerReq_cmd ncmd() const;
  inline void set_ncmd(::tms::StateServerReq_cmd value);

  // @@protoc_insertion_point(class_scope:tms.StateServerReq)
 private:
  inline void set_has_ncmd();
  inline void clear_has_ncmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ncmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static StateServerReq* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfo : public ::google::protobuf::Message {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfo& default_instance();

  void Swap(ServerInfo* other);

  // implements Message ----------------------------------------------

  ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uServerID = 1;
  inline bool has_userverid() const;
  inline void clear_userverid();
  static const int kUServerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 userverid() const;
  inline void set_userverid(::google::protobuf::uint32 value);

  // required string strServerIP = 2;
  inline bool has_strserverip() const;
  inline void clear_strserverip();
  static const int kStrServerIPFieldNumber = 2;
  inline const ::std::string& strserverip() const;
  inline void set_strserverip(const ::std::string& value);
  inline void set_strserverip(const char* value);
  inline void set_strserverip(const char* value, size_t size);
  inline ::std::string* mutable_strserverip();
  inline ::std::string* release_strserverip();
  inline void set_allocated_strserverip(::std::string* strserverip);

  // required uint32 usServerPort = 3;
  inline bool has_usserverport() const;
  inline void clear_usserverport();
  static const int kUsServerPortFieldNumber = 3;
  inline ::google::protobuf::uint32 usserverport() const;
  inline void set_usserverport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.ServerInfo)
 private:
  inline void set_has_userverid();
  inline void clear_has_userverid();
  inline void set_has_strserverip();
  inline void clear_has_strserverip();
  inline void set_has_usserverport();
  inline void clear_has_usserverport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strserverip_;
  ::google::protobuf::uint32 userverid_;
  ::google::protobuf::uint32 usserverport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerOut : public ::google::protobuf::Message {
 public:
  ServerOut();
  virtual ~ServerOut();

  ServerOut(const ServerOut& from);

  inline ServerOut& operator=(const ServerOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerOut& default_instance();

  void Swap(ServerOut* other);

  // implements Message ----------------------------------------------

  ServerOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerOut& from);
  void MergeFrom(const ServerOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uServerID = 1;
  inline bool has_userverid() const;
  inline void clear_userverid();
  static const int kUServerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 userverid() const;
  inline void set_userverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.ServerOut)
 private:
  inline void set_has_userverid();
  inline void clear_has_userverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static ServerOut* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfoList : public ::google::protobuf::Message {
 public:
  ServerInfoList();
  virtual ~ServerInfoList();

  ServerInfoList(const ServerInfoList& from);

  inline ServerInfoList& operator=(const ServerInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfoList& default_instance();

  void Swap(ServerInfoList* other);

  // implements Message ----------------------------------------------

  ServerInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfoList& from);
  void MergeFrom(const ServerInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tms.ServerInfo ServerInfos = 1;
  inline int serverinfos_size() const;
  inline void clear_serverinfos();
  static const int kServerInfosFieldNumber = 1;
  inline const ::tms::ServerInfo& serverinfos(int index) const;
  inline ::tms::ServerInfo* mutable_serverinfos(int index);
  inline ::tms::ServerInfo* add_serverinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::ServerInfo >&
      serverinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::ServerInfo >*
      mutable_serverinfos();

  // @@protoc_insertion_point(class_scope:tms.ServerInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::ServerInfo > serverinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static ServerInfoList* default_instance_;
};
// -------------------------------------------------------------------

class TargtServerID : public ::google::protobuf::Message {
 public:
  TargtServerID();
  virtual ~TargtServerID();

  TargtServerID(const TargtServerID& from);

  inline TargtServerID& operator=(const TargtServerID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargtServerID& default_instance();

  void Swap(TargtServerID* other);

  // implements Message ----------------------------------------------

  TargtServerID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargtServerID& from);
  void MergeFrom(const TargtServerID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uTargetID = 1 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // required uint32 uServerID = 2 [default = 0];
  inline bool has_userverid() const;
  inline void clear_userverid();
  static const int kUServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 userverid() const;
  inline void set_userverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.TargtServerID)
 private:
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_userverid();
  inline void clear_has_userverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 utargetid_;
  ::google::protobuf::uint32 userverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static TargtServerID* default_instance_;
};
// -------------------------------------------------------------------

class TargtServerIDList : public ::google::protobuf::Message {
 public:
  TargtServerIDList();
  virtual ~TargtServerIDList();

  TargtServerIDList(const TargtServerIDList& from);

  inline TargtServerIDList& operator=(const TargtServerIDList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargtServerIDList& default_instance();

  void Swap(TargtServerIDList* other);

  // implements Message ----------------------------------------------

  TargtServerIDList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargtServerIDList& from);
  void MergeFrom(const TargtServerIDList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tms.TargtServerID TargtServerIDs = 1;
  inline int targtserverids_size() const;
  inline void clear_targtserverids();
  static const int kTargtServerIDsFieldNumber = 1;
  inline const ::tms::TargtServerID& targtserverids(int index) const;
  inline ::tms::TargtServerID* mutable_targtserverids(int index);
  inline ::tms::TargtServerID* add_targtserverids();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::TargtServerID >&
      targtserverids() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::TargtServerID >*
      mutable_targtserverids();

  // @@protoc_insertion_point(class_scope:tms.TargtServerIDList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::TargtServerID > targtserverids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static TargtServerIDList* default_instance_;
};
// -------------------------------------------------------------------

class TargetOnlineInfo : public ::google::protobuf::Message {
 public:
  TargetOnlineInfo();
  virtual ~TargetOnlineInfo();

  TargetOnlineInfo(const TargetOnlineInfo& from);

  inline TargetOnlineInfo& operator=(const TargetOnlineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetOnlineInfo& default_instance();

  void Swap(TargetOnlineInfo* other);

  // implements Message ----------------------------------------------

  TargetOnlineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargetOnlineInfo& from);
  void MergeFrom(const TargetOnlineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uAccountID = 1 [default = 0];
  inline bool has_uaccountid() const;
  inline void clear_uaccountid();
  static const int kUAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uaccountid() const;
  inline void set_uaccountid(::google::protobuf::uint32 value);

  // required uint32 uSessionID = 2 [default = 0];
  inline bool has_usessionid() const;
  inline void clear_usessionid();
  static const int kUSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 usessionid() const;
  inline void set_usessionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.TargetOnlineInfo)
 private:
  inline void set_has_uaccountid();
  inline void clear_has_uaccountid();
  inline void set_has_usessionid();
  inline void clear_has_usessionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uaccountid_;
  ::google::protobuf::uint32 usessionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tms_2eproto();
  friend void protobuf_AssignDesc_tms_2eproto();
  friend void protobuf_ShutdownFile_tms_2eproto();

  void InitAsDefaultInstance();
  static TargetOnlineInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// AnsInfo

// required uint32 uError = 1;
inline bool AnsInfo::has_uerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnsInfo::set_has_uerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnsInfo::clear_has_uerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnsInfo::clear_uerror() {
  uerror_ = 0u;
  clear_has_uerror();
}
inline ::google::protobuf::uint32 AnsInfo::uerror() const {
  return uerror_;
}
inline void AnsInfo::set_uerror(::google::protobuf::uint32 value) {
  set_has_uerror();
  uerror_ = value;
}

// required .tms.cmd tCmd = 2;
inline bool AnsInfo::has_tcmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnsInfo::set_has_tcmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnsInfo::clear_has_tcmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnsInfo::clear_tcmd() {
  tcmd_ = 0;
  clear_has_tcmd();
}
inline ::tms::cmd AnsInfo::tcmd() const {
  return static_cast< ::tms::cmd >(tcmd_);
}
inline void AnsInfo::set_tcmd(::tms::cmd value) {
  assert(::tms::cmd_IsValid(value));
  set_has_tcmd();
  tcmd_ = value;
}

// optional string strAccountNo = 3;
inline bool AnsInfo::has_straccountno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnsInfo::set_has_straccountno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnsInfo::clear_has_straccountno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnsInfo::clear_straccountno() {
  if (straccountno_ != &::google::protobuf::internal::kEmptyString) {
    straccountno_->clear();
  }
  clear_has_straccountno();
}
inline const ::std::string& AnsInfo::straccountno() const {
  return *straccountno_;
}
inline void AnsInfo::set_straccountno(const ::std::string& value) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(value);
}
inline void AnsInfo::set_straccountno(const char* value) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(value);
}
inline void AnsInfo::set_straccountno(const char* value, size_t size) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AnsInfo::mutable_straccountno() {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  return straccountno_;
}
inline ::std::string* AnsInfo::release_straccountno() {
  clear_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccountno_;
    straccountno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AnsInfo::set_allocated_straccountno(::std::string* straccountno) {
  if (straccountno_ != &::google::protobuf::internal::kEmptyString) {
    delete straccountno_;
  }
  if (straccountno) {
    set_has_straccountno();
    straccountno_ = straccountno;
  } else {
    clear_has_straccountno();
    straccountno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uAccountID = 4;
inline bool AnsInfo::has_uaccountid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnsInfo::set_has_uaccountid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnsInfo::clear_has_uaccountid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnsInfo::clear_uaccountid() {
  uaccountid_ = 0u;
  clear_has_uaccountid();
}
inline ::google::protobuf::uint32 AnsInfo::uaccountid() const {
  return uaccountid_;
}
inline void AnsInfo::set_uaccountid(::google::protobuf::uint32 value) {
  set_has_uaccountid();
  uaccountid_ = value;
}

// -------------------------------------------------------------------

// ServerTime

// required uint64 uServerTime = 1;
inline bool ServerTime::has_uservertime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTime::set_has_uservertime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTime::clear_has_uservertime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTime::clear_uservertime() {
  uservertime_ = GOOGLE_ULONGLONG(0);
  clear_has_uservertime();
}
inline ::google::protobuf::uint64 ServerTime::uservertime() const {
  return uservertime_;
}
inline void ServerTime::set_uservertime(::google::protobuf::uint64 value) {
  set_has_uservertime();
  uservertime_ = value;
}

// -------------------------------------------------------------------

// FileLoadInfo

// required string strName = 1;
inline bool FileLoadInfo::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileLoadInfo::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileLoadInfo::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileLoadInfo::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& FileLoadInfo::strname() const {
  return *strname_;
}
inline void FileLoadInfo::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void FileLoadInfo::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void FileLoadInfo::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FileLoadInfo::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* FileLoadInfo::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FileLoadInfo::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uOffset = 2;
inline bool FileLoadInfo::has_uoffset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileLoadInfo::set_has_uoffset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileLoadInfo::clear_has_uoffset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileLoadInfo::clear_uoffset() {
  uoffset_ = 0u;
  clear_has_uoffset();
}
inline ::google::protobuf::uint32 FileLoadInfo::uoffset() const {
  return uoffset_;
}
inline void FileLoadInfo::set_uoffset(::google::protobuf::uint32 value) {
  set_has_uoffset();
  uoffset_ = value;
}

// required uint32 uDownsize = 3;
inline bool FileLoadInfo::has_udownsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileLoadInfo::set_has_udownsize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileLoadInfo::clear_has_udownsize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileLoadInfo::clear_udownsize() {
  udownsize_ = 0u;
  clear_has_udownsize();
}
inline ::google::protobuf::uint32 FileLoadInfo::udownsize() const {
  return udownsize_;
}
inline void FileLoadInfo::set_udownsize(::google::protobuf::uint32 value) {
  set_has_udownsize();
  udownsize_ = value;
}

// required uint32 uLocalsize = 4;
inline bool FileLoadInfo::has_ulocalsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileLoadInfo::set_has_ulocalsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileLoadInfo::clear_has_ulocalsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileLoadInfo::clear_ulocalsize() {
  ulocalsize_ = 0u;
  clear_has_ulocalsize();
}
inline ::google::protobuf::uint32 FileLoadInfo::ulocalsize() const {
  return ulocalsize_;
}
inline void FileLoadInfo::set_ulocalsize(::google::protobuf::uint32 value) {
  set_has_ulocalsize();
  ulocalsize_ = value;
}

// required uint32 uLocaltime = 5;
inline bool FileLoadInfo::has_ulocaltime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FileLoadInfo::set_has_ulocaltime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FileLoadInfo::clear_has_ulocaltime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FileLoadInfo::clear_ulocaltime() {
  ulocaltime_ = 0u;
  clear_has_ulocaltime();
}
inline ::google::protobuf::uint32 FileLoadInfo::ulocaltime() const {
  return ulocaltime_;
}
inline void FileLoadInfo::set_ulocaltime(::google::protobuf::uint32 value) {
  set_has_ulocaltime();
  ulocaltime_ = value;
}

// required uint32 bVersion = 6;
inline bool FileLoadInfo::has_bversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FileLoadInfo::set_has_bversion() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FileLoadInfo::clear_has_bversion() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FileLoadInfo::clear_bversion() {
  bversion_ = 0u;
  clear_has_bversion();
}
inline ::google::protobuf::uint32 FileLoadInfo::bversion() const {
  return bversion_;
}
inline void FileLoadInfo::set_bversion(::google::protobuf::uint32 value) {
  set_has_bversion();
  bversion_ = value;
}

// -------------------------------------------------------------------

// FileLoadData

// required uint32 uError = 1;
inline bool FileLoadData::has_uerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileLoadData::set_has_uerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileLoadData::clear_has_uerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileLoadData::clear_uerror() {
  uerror_ = 0u;
  clear_has_uerror();
}
inline ::google::protobuf::uint32 FileLoadData::uerror() const {
  return uerror_;
}
inline void FileLoadData::set_uerror(::google::protobuf::uint32 value) {
  set_has_uerror();
  uerror_ = value;
}

// required uint32 uFilesize = 2;
inline bool FileLoadData::has_ufilesize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileLoadData::set_has_ufilesize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileLoadData::clear_has_ufilesize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileLoadData::clear_ufilesize() {
  ufilesize_ = 0u;
  clear_has_ufilesize();
}
inline ::google::protobuf::uint32 FileLoadData::ufilesize() const {
  return ufilesize_;
}
inline void FileLoadData::set_ufilesize(::google::protobuf::uint32 value) {
  set_has_ufilesize();
  ufilesize_ = value;
}

// required uint32 uOffset = 3;
inline bool FileLoadData::has_uoffset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileLoadData::set_has_uoffset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileLoadData::clear_has_uoffset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileLoadData::clear_uoffset() {
  uoffset_ = 0u;
  clear_has_uoffset();
}
inline ::google::protobuf::uint32 FileLoadData::uoffset() const {
  return uoffset_;
}
inline void FileLoadData::set_uoffset(::google::protobuf::uint32 value) {
  set_has_uoffset();
  uoffset_ = value;
}

// required uint32 uDownsize = 4;
inline bool FileLoadData::has_udownsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileLoadData::set_has_udownsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileLoadData::clear_has_udownsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileLoadData::clear_udownsize() {
  udownsize_ = 0u;
  clear_has_udownsize();
}
inline ::google::protobuf::uint32 FileLoadData::udownsize() const {
  return udownsize_;
}
inline void FileLoadData::set_udownsize(::google::protobuf::uint32 value) {
  set_has_udownsize();
  udownsize_ = value;
}

// required uint32 uTmmodified = 5;
inline bool FileLoadData::has_utmmodified() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FileLoadData::set_has_utmmodified() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FileLoadData::clear_has_utmmodified() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FileLoadData::clear_utmmodified() {
  utmmodified_ = 0u;
  clear_has_utmmodified();
}
inline ::google::protobuf::uint32 FileLoadData::utmmodified() const {
  return utmmodified_;
}
inline void FileLoadData::set_utmmodified(::google::protobuf::uint32 value) {
  set_has_utmmodified();
  utmmodified_ = value;
}

// optional bytes szData = 6;
inline bool FileLoadData::has_szdata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FileLoadData::set_has_szdata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FileLoadData::clear_has_szdata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FileLoadData::clear_szdata() {
  if (szdata_ != &::google::protobuf::internal::kEmptyString) {
    szdata_->clear();
  }
  clear_has_szdata();
}
inline const ::std::string& FileLoadData::szdata() const {
  return *szdata_;
}
inline void FileLoadData::set_szdata(const ::std::string& value) {
  set_has_szdata();
  if (szdata_ == &::google::protobuf::internal::kEmptyString) {
    szdata_ = new ::std::string;
  }
  szdata_->assign(value);
}
inline void FileLoadData::set_szdata(const char* value) {
  set_has_szdata();
  if (szdata_ == &::google::protobuf::internal::kEmptyString) {
    szdata_ = new ::std::string;
  }
  szdata_->assign(value);
}
inline void FileLoadData::set_szdata(const void* value, size_t size) {
  set_has_szdata();
  if (szdata_ == &::google::protobuf::internal::kEmptyString) {
    szdata_ = new ::std::string;
  }
  szdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FileLoadData::mutable_szdata() {
  set_has_szdata();
  if (szdata_ == &::google::protobuf::internal::kEmptyString) {
    szdata_ = new ::std::string;
  }
  return szdata_;
}
inline ::std::string* FileLoadData::release_szdata() {
  clear_has_szdata();
  if (szdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szdata_;
    szdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FileLoadData::set_allocated_szdata(::std::string* szdata) {
  if (szdata_ != &::google::protobuf::internal::kEmptyString) {
    delete szdata_;
  }
  if (szdata) {
    set_has_szdata();
    szdata_ = szdata;
  } else {
    clear_has_szdata();
    szdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// StateServerReq

// required .tms.StateServerReq.cmd ncmd = 1;
inline bool StateServerReq::has_ncmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateServerReq::set_has_ncmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StateServerReq::clear_has_ncmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StateServerReq::clear_ncmd() {
  ncmd_ = 1;
  clear_has_ncmd();
}
inline ::tms::StateServerReq_cmd StateServerReq::ncmd() const {
  return static_cast< ::tms::StateServerReq_cmd >(ncmd_);
}
inline void StateServerReq::set_ncmd(::tms::StateServerReq_cmd value) {
  assert(::tms::StateServerReq_cmd_IsValid(value));
  set_has_ncmd();
  ncmd_ = value;
}

// -------------------------------------------------------------------

// ServerInfo

// required uint32 uServerID = 1;
inline bool ServerInfo::has_userverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerInfo::set_has_userverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerInfo::clear_has_userverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerInfo::clear_userverid() {
  userverid_ = 0u;
  clear_has_userverid();
}
inline ::google::protobuf::uint32 ServerInfo::userverid() const {
  return userverid_;
}
inline void ServerInfo::set_userverid(::google::protobuf::uint32 value) {
  set_has_userverid();
  userverid_ = value;
}

// required string strServerIP = 2;
inline bool ServerInfo::has_strserverip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerInfo::set_has_strserverip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerInfo::clear_has_strserverip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerInfo::clear_strserverip() {
  if (strserverip_ != &::google::protobuf::internal::kEmptyString) {
    strserverip_->clear();
  }
  clear_has_strserverip();
}
inline const ::std::string& ServerInfo::strserverip() const {
  return *strserverip_;
}
inline void ServerInfo::set_strserverip(const ::std::string& value) {
  set_has_strserverip();
  if (strserverip_ == &::google::protobuf::internal::kEmptyString) {
    strserverip_ = new ::std::string;
  }
  strserverip_->assign(value);
}
inline void ServerInfo::set_strserverip(const char* value) {
  set_has_strserverip();
  if (strserverip_ == &::google::protobuf::internal::kEmptyString) {
    strserverip_ = new ::std::string;
  }
  strserverip_->assign(value);
}
inline void ServerInfo::set_strserverip(const char* value, size_t size) {
  set_has_strserverip();
  if (strserverip_ == &::google::protobuf::internal::kEmptyString) {
    strserverip_ = new ::std::string;
  }
  strserverip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerInfo::mutable_strserverip() {
  set_has_strserverip();
  if (strserverip_ == &::google::protobuf::internal::kEmptyString) {
    strserverip_ = new ::std::string;
  }
  return strserverip_;
}
inline ::std::string* ServerInfo::release_strserverip() {
  clear_has_strserverip();
  if (strserverip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strserverip_;
    strserverip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServerInfo::set_allocated_strserverip(::std::string* strserverip) {
  if (strserverip_ != &::google::protobuf::internal::kEmptyString) {
    delete strserverip_;
  }
  if (strserverip) {
    set_has_strserverip();
    strserverip_ = strserverip;
  } else {
    clear_has_strserverip();
    strserverip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 usServerPort = 3;
inline bool ServerInfo::has_usserverport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerInfo::set_has_usserverport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerInfo::clear_has_usserverport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerInfo::clear_usserverport() {
  usserverport_ = 0u;
  clear_has_usserverport();
}
inline ::google::protobuf::uint32 ServerInfo::usserverport() const {
  return usserverport_;
}
inline void ServerInfo::set_usserverport(::google::protobuf::uint32 value) {
  set_has_usserverport();
  usserverport_ = value;
}

// -------------------------------------------------------------------

// ServerOut

// required uint32 uServerID = 1;
inline bool ServerOut::has_userverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerOut::set_has_userverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerOut::clear_has_userverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerOut::clear_userverid() {
  userverid_ = 0u;
  clear_has_userverid();
}
inline ::google::protobuf::uint32 ServerOut::userverid() const {
  return userverid_;
}
inline void ServerOut::set_userverid(::google::protobuf::uint32 value) {
  set_has_userverid();
  userverid_ = value;
}

// -------------------------------------------------------------------

// ServerInfoList

// repeated .tms.ServerInfo ServerInfos = 1;
inline int ServerInfoList::serverinfos_size() const {
  return serverinfos_.size();
}
inline void ServerInfoList::clear_serverinfos() {
  serverinfos_.Clear();
}
inline const ::tms::ServerInfo& ServerInfoList::serverinfos(int index) const {
  return serverinfos_.Get(index);
}
inline ::tms::ServerInfo* ServerInfoList::mutable_serverinfos(int index) {
  return serverinfos_.Mutable(index);
}
inline ::tms::ServerInfo* ServerInfoList::add_serverinfos() {
  return serverinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::ServerInfo >&
ServerInfoList::serverinfos() const {
  return serverinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::ServerInfo >*
ServerInfoList::mutable_serverinfos() {
  return &serverinfos_;
}

// -------------------------------------------------------------------

// TargtServerID

// required uint32 uTargetID = 1 [default = 0];
inline bool TargtServerID::has_utargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargtServerID::set_has_utargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargtServerID::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargtServerID::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 TargtServerID::utargetid() const {
  return utargetid_;
}
inline void TargtServerID::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// required uint32 uServerID = 2 [default = 0];
inline bool TargtServerID::has_userverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargtServerID::set_has_userverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargtServerID::clear_has_userverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargtServerID::clear_userverid() {
  userverid_ = 0u;
  clear_has_userverid();
}
inline ::google::protobuf::uint32 TargtServerID::userverid() const {
  return userverid_;
}
inline void TargtServerID::set_userverid(::google::protobuf::uint32 value) {
  set_has_userverid();
  userverid_ = value;
}

// -------------------------------------------------------------------

// TargtServerIDList

// repeated .tms.TargtServerID TargtServerIDs = 1;
inline int TargtServerIDList::targtserverids_size() const {
  return targtserverids_.size();
}
inline void TargtServerIDList::clear_targtserverids() {
  targtserverids_.Clear();
}
inline const ::tms::TargtServerID& TargtServerIDList::targtserverids(int index) const {
  return targtserverids_.Get(index);
}
inline ::tms::TargtServerID* TargtServerIDList::mutable_targtserverids(int index) {
  return targtserverids_.Mutable(index);
}
inline ::tms::TargtServerID* TargtServerIDList::add_targtserverids() {
  return targtserverids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::TargtServerID >&
TargtServerIDList::targtserverids() const {
  return targtserverids_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::TargtServerID >*
TargtServerIDList::mutable_targtserverids() {
  return &targtserverids_;
}

// -------------------------------------------------------------------

// TargetOnlineInfo

// required uint32 uAccountID = 1 [default = 0];
inline bool TargetOnlineInfo::has_uaccountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetOnlineInfo::set_has_uaccountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetOnlineInfo::clear_has_uaccountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetOnlineInfo::clear_uaccountid() {
  uaccountid_ = 0u;
  clear_has_uaccountid();
}
inline ::google::protobuf::uint32 TargetOnlineInfo::uaccountid() const {
  return uaccountid_;
}
inline void TargetOnlineInfo::set_uaccountid(::google::protobuf::uint32 value) {
  set_has_uaccountid();
  uaccountid_ = value;
}

// required uint32 uSessionID = 2 [default = 0];
inline bool TargetOnlineInfo::has_usessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetOnlineInfo::set_has_usessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetOnlineInfo::clear_has_usessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetOnlineInfo::clear_usessionid() {
  usessionid_ = 0u;
  clear_has_usessionid();
}
inline ::google::protobuf::uint32 TargetOnlineInfo::usessionid() const {
  return usessionid_;
}
inline void TargetOnlineInfo::set_usessionid(::google::protobuf::uint32 value) {
  set_has_usessionid();
  usessionid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tms

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tms::StateServerReq_cmd>() {
  return ::tms::StateServerReq_cmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tms::cmd>() {
  return ::tms::cmd_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tms_2eproto__INCLUDED
